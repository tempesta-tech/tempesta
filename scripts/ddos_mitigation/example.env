# Start DDoS Defender in training mode.
# Possible values: off / historical / real
#
# off        – Disables training mode and immediately starts protection
#              using default thresholds from the config.
#
# historical – Calculates thresholds based on a historical time period.
#
# real       – Waits to collect live client activity,
#              then calculates thresholds.
TRAINING_MODE="off"

# Duration of the waiting period in "real" mode,
# during which the Defender collects data before calculating thresholds.
TRAINING_MODE_DURATION_MIN=10

# Path to the Tempesta config file with predefined JA5T-blocked hashes.
# This file is also used to add new blocking hashes.
PATH_TO_JA5T_CONFIG="/etc/tempesta/ja5t/blocked.conf"

# Path to the Tempesta config file with predefined JA5H-blocked hashes.
# This file is also used to add new blocking hashes.
PATH_TO_JA5H_CONFIG="/etc/tempesta/ja5h/blocked.conf"

# ClickHouse server host where Tempesta FW stores access logs.
CLICKHOUSE_HOST="127.0.0.1"

# Clickhouse server port
CLICKHOUSE_PORT=8123

# Clickhouse server user
CLICKHOUSE_USER="default"

# Clickhouse server password
CLICKHOUSE_PASSWORD=""

# Clickhouse access log table name
CLICKHOUSE_TABLE_NAME="access_log"

# Clickhouse server database
CLICKHOUSE_DATABASE="default"

# If training mode is enabled, the Defender will identify persistent users
# and mark them as regular users that should never be blocked.
# The 'persistent_users_max_amount' defines the maximum number
# of persistent users that can be loaded.
PERSISTENT_USERS_MAX_AMOUNT=100

# Defines how far back (in minutes) to look when loading persistent users.
# For example: 60 means starting from 60 minutes ago.
PERSISTENT_USERS_WINDOW_OFFSET_MIN=60

# Defines the window size (in minutes) for loading persistent users.
# For example: 60
# Used together with 'PERSISTENT_USERS_WINDOW_OFFSET_MIN'.
# Example: setting both 'PERSISTENT_USERS_WINDOW_OFFSET_MIN = 60' and
# 'PERSISTENT_USERS_WINDOW_DURATION_MIN = 60' will load users active during the last hour.
PERSISTENT_USERS_WINDOW_DURATION_MIN=60

# The average number of requests per second a user must make
# to be considered "persistent".
PERSISTENT_USERS_TOTAL_REQUESTS=1

# The average total response time a user must accumulate
# to be considered "persistent".
PERSISTENT_USERS_TOTAL_TIME=1

# The default requests-per-second (RPS) threshold.
# A user exceeding this limit will be blocked.
# This is used when training mode is disabled, or when the threshold
# calculated from real or historical data is too low.
DEFAULT_REQUESTS_THRESHOLD=100

# The default average accumulated response time threshold.
# A user exceeding this limit will be blocked.
# Used when training mode is disabled, or when the threshold
# calculated from real or historical data is too low.
DEFAULT_TIME_THRESHOLD=40

# The default threshold for the number of requests finished with errors.
# A user exceeding this limit will be blocked.
# Used when training mode is disabled, or when the threshold
# calculated from real or historical data is too low.
DEFAULT_ERRORS_THRESHOLD=5

# How far back to start collecting stats for default thresholds, in minutes.
# Example: 60
STATS_WINDOW_OFFSET_MIN=60

# The time window (in minutes) for collecting statistics used to calculate default thresholds.
# Example: 60
# Using both stats_window_offset_min=60 and stats_window_duration_min=60
# will collect statistics for the last hour.
STATS_WINDOW_DURATION_MIN=60

# The precision of average rps values statistic. In cases when values are to low, it should
# made rounding, like 0.5 should be increased to 1, or 0.4 to zero
STATS_RPS_PRECISION=1

# The precision of average time values statistic. In cases when values are to low, it should
# made rounding, like 0.5 should be increased to 1, or 0.4 to zero
STATS_TIME_PRECISION=1

# The precision of average errors values statistic. In cases when values are to low, it should
# made rounding, like 0.5 should be increased to 1, or 0.4 to zero
STATS_ERRORS_PRECISION=0.1

# The list of backend response status which are legal
RESPONSE_STATUSES_WHITE_LIST=[100,101,200,201,204,300,301,302,303,304,305,307,308,400,401,403]

# The activated detector shold be used. Each of one define the way how to dermine
# risky users.
#
# threshold     - has training mode, use threshold to find exceeted limits and mark clients as risky
# geoip         - uses allowed list of cities and any other could be compared with threshold and block
DETECTORS=["threshold"]

# Defines how the Defender should block users. Multiple values can be set.
# Possible values: ja5t, ja5h, ipset, nftables
#
# ja5t      – Blocks users by their JA5T fingerprint based on TLS connection data.
# ja5h      – Blocks users by their JA5H fingerprint based on HTTP request data.
# ipset     – Blocks users by IP using IPSet and iptables.
# nftables  – Blocks users by IP using nftables.
BLOCKING_TYPES=["ja5t"]

# Time period (in seconds) that defines how often the user blocking task
# should run to find and block new users.
BLOCKING_WINDOW_DURATION_SEC=10

# Default number of JA5 hashes to block during a single checking period
BLOCKING_JA5_LIMIT=1000

# Default limit of IP addresses to block during a single period.
BLOCKING_IP_LIMITS=1000

# The name of the blocked IPs group in IPSet,
# and the corresponding group name for blocked IPs in nftables.
BLOCKING_IPSET_NAME="tempesta_blocked_ips"

# The minimum time (in minutes) a user should remain blocked.
# The block will be lifted after this time has elapsed.
BLOCKING_TIME_MIN=60

# The time interval (in minutes) for checking whether blocked users
# should be released.
BLOCKING_RELEASE_TIME_MIN=1

# The GeoIP detector config parameter that defines the percentage request limit from a region.
# If the limit is exceeded and the region is not in the whitelist, the client will be blocked.
DETECTOR_GEOIP_PERCENT_THRESHOLD=95

# The GeoIP detector config parameter that defines the minimum RPS of requests from a region.
# If the limit is exceeded and the region is not in the whitelist, the client will be blocked.
DETECTOR_GEOIP_MIN_RPS=100

# The GeoIP detector config parameter that defines the time period (in seconds)
# over which client analysis should be performed.
DETECTOR_GEOIP_PERIOD_SECONDS=10

# The GeoIP detector config parameter that defines the path to the MaxMind City GeoIP database.
DETECTOR_GEOIP_PATH_TO_DB='/etc/tempesta-ddos-defender/city.db'

# The GeoIP detector config parameter that defines path to the text file with the whitelisted city names
DETECTOR_GEOIP_PATH_ALLOWED_CITIES_LIST="/etc/tempesta-ddos-defender/allowed_cities.txt"

# Path to the Tempesta executable file, if it was installed manually
# or in a non-default directory. By default, the Defender
# reloads Tempesta FW using systemctl.
TEMPESTA_EXECUTABLE_PATH=""

# Path to the Tempesta Config file, if it was install manually
TEMPESTA_CONFIG_PATH=""

# Path to the file containing a list of protected User-Agents.
# Requests with these User-Agents should be ignored during a DDoS attack.
# One User-Agent per line.
ALLOWED_USER_AGENTS_FILE_PATH="/etc/tempesta-ddos-defender/allow_user_agents.txt"

# Application logging level
LOG_LEVEL="INFO"
