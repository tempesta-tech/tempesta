tempesta-fw-dkms (0.8.0) focal; urgency=medium

  * Add `Expect: 100-continue` support
  * Add `cache_use_stale` directive
  * Add ja5h and ja5t filtering, configuration. access log
  * Add tfw_logger for access_Log with Clickhouse
  * Add server address to warning/debug messages.
  * Add tls certificate date validation
  * Add support of Cache-Control: stale-if-error
  * Add response with 308 status code to heuristically cacheable
  * Add CRLF filter.
  * Add reference to a peper about ECDSA nonce attack
  * add CamelCase type name check
  * Add check for dublicate options in config
  * Add global Tempesta FW percentiles statistics.
  * Remove client from tdb
  * Remove lower limit of reconnection attempts.
  * Remove `timeout` option for sticky cookie
  * Remove redirect mark from Tempesta
  * Remove `delay_limit` JS challenge option
  * Rename: connection_rate -> tcp_connection_rate connection_burst -> tcp_connection_burst concurrent_connections -> concurrent_tcp_connections
  * Properly abort server connection for stale response
  * Mark proxy-connection header as hop-by-hop in case of segmentation
  * Drop HEAD and GET requests with body and trailers
  * Get rid of per-cpu buffer `g_te_buf`
  * Mark 'Keep-Alive' header as hop-by-hop
  * Immediately stop processing for closing conection
  * Use appropriate node for stale response
  * Do cache PURGE with respect to NUMA mode
  * Don't cache set-cookie header
  * Do not add Content-Length header for HTTP2 responses
  * tdb: Add simple global freelist
  * Forbid duplicated `stale-if-error` in response
  * Don't send stale response in case of frang block
  * Change TDB version to 0.2.0
  * Store in the cache only single record
  * Rewrite HEAD method to GET for cache
  * Clear socket write queue and send RST if connection is dropped
  * Catch malformed HM response.
  * Update cpu-node map allocation
  * Handle HTTPS/1 and HTTP/2 on the same port
  * Don't cache nonidempotent GET and HEAD requests
  * Invalidate stored responses.
  * Cache only methods according RFC 9110.
  * Restrict range of possible JS challenge response statuses
  * Drop request sock in case when frang block new connection
  * http_hdr_len and http_hdr_cnt were made only global because they are checked earlier than vhost is determined.
  * Use response to a GET request to satisfy HEAD request
  * Reset closing flags in st_flags field
  * Close socket after sending TLS_ALERT
  * Introduce default server response statistics for HTTP code 200.
  * Introduce 'health_stat', 'health_stat_server' directive.
  * Cut port from authority when lookup vhost
  * Block all malformed requests.

 -- Tempesta Technologies, Inc. <info@tempesta-tech.com>  Thu, 13 Mar 2025 16:13:47 +0400

tempesta-fw-dkms (0.7.1) focal; urgency=medium

  * Frang: Changed default settings to more strict
  * Implement `max_concurrent_streams` limitation
  * Implement http limits for request headers
  * Frang: fix parsing of request method with TCP segmentation
  * Fix unlimited body parsing and add body iterator
  * Fix of CCM tls encryption and decryption
  * Fix of infinite loop in chunked body (HTTP/2)
  * Fix race with using parser fields
  * Fix HTTP/2 headers name confusion
  * Fix GPF when skb reused
  * Fix of changing http2 window size
  * Fix BUG_ON in tdb_htrie_descen
  * Rewrite tfw_hpack_node_compare to make it clean & fast
  * Fix incorrect server connection reference counter
  * Hide "Te" header from HTTP/1.x backend when proxying response over HTTP/2.

tempesta-fw-dkms (0.7.0) focal; urgency=medium

  * Fix corrupted header location on H2 sticky cookie redirect
  * Fix crash during tempesta reconfiguration
  * Safe handling of websockets drop
  * Delete tempesta-tests.Jenkinsfile
  * Fix response absence in case of invalid http2 request
  * HTTP2: report SETTINGS_HEADER_TABLE_SIZE in initial SETTINGS frame.
  * Fix warning in dmesg in case of error in frame processing
  * HTTP2: account for :status headers field when sending 304 response
  * Implement parsing Etag without double quotes
  * Fix kernel panic in case of small value of SETTINGS_HEADER_TABLE_SIZE
  * Correctly set TFW_HTTP_B_ACCEPT_HTML bit in req->flags from hpack
  * Remove outdated and not supported TfwBomber.
  * Adjustable cache ttl via HTTP tables
  * Remove "$cache" action related code
  * Reworked HTTP1 -> HTTP2 message transformation
  * Fixed chunked body parsing error
  * Fix warning under heavy segmentation
  * Fix various problems reported in #1703
  * Cleanups and style fix
  * Mekhanik evgenii/flow control 1394 v3
  * Added restriction to specify DEBUG < 1
  * Added small hacks to work around tests disabled by #1630
  * Fixed connection leak on pipelined upgrade request
  * Fix invalid hpack decoding
  * Fix BUG_ON in tfw_h2_stream_process.
  * Remove tail_lock hotfix code.
  * Fix tls tests build.
  * Fix incorrect work of ttls_pk_free function
  * Fixed framing error for resposnses received from cache with header modification
  * Fixed bug when headers and body after our modifications became shuffled
  * Do not forward connection-specific headers to/from H1 backend for H2 clients
  * Merge multiple cookie headers coming from HTTP/2 client into a single Cookie header for HTTP/1.1 backend
  * Inherit iptables mark when splitting skb
  * Validate vhost picked by SNI vs vhost picked by authority
  * Fix race in rsa implementation.
  * Fix invalid return code in tfw_tls_add_cn
  * String pattern fixed for T_DBG3 macro
  * Fixed connections drop under load
  * Fixed kernel panic under heavy load with low mtu
  * Fix invalid stream processing
  * Make HTTP/2 parser reject upper-case headers

 -- Tempesta Technologies, Inc. <info@tempesta-tech.com>  Wed, 3 Mar 2022 20:13:43 +0500

tempesta-fw-dkms (0.6.8) focal; urgency=medium

  * Fix parsing of an empty extension if it comes last in ClientHello.
  * Fix cached data corruption during encryption.
  * Close the connection on errors during TLS handshake stage.
  * Fix decryption of large records spanning multiple skb's.
  * Verify ClientHello extention lengths before trying to read their data.
  * Fix the deadlock caused by the error reporting during handshake stage.
  * Handle ciphertexts larger than 16384 bytes.

 -- Tempesta Technologies, Inc. <info@tempesta-tech.com>  Wed, 3 Mar 2022 20:13:43 +0500

tempesta-fw-dkms (0.5.0) stretch; urgency=medium

  * Add HTTP health monitoring
  * Performance optiomistation and fixes for the On-the-fly reconfiguration
  * Add Referer header support to HTTP match rules
  * Add JavaScript challenge to Sticky Cookie module
  * Add user defined headers to forwarded messages
  * Whitelist requests from web search engines
  * Protect from manual unloading under load
  * Fix of response-request pairing for pipelined messages
  * Many other minor fixes. See git log for more information.

 -- Tempesta Technologies, Inc. <info@tempesta-tech.com>  Wed, 21 Mar 2018 14:48:56 +0500

tempesta-fw-dkms (0.5.0pre8) stretch; urgency=medium

  * Update supported Linux kernel to 4.9.35
  * Fix memory leaks under high load
  * Add predictive and dynamic ratio scheduler
  * On-the-fly reconfiguration
  * A lot of other bug fixes and improvements

 -- Tempeststa Technologies, Inc. <info@tempesta-tech.com>  Tue, 23 Jan 2018 08:58:30 +0500

tempesta-fw-dkms (0.5.0) stretch; urgency=medium

  * Initial release

 -- Tempeststa Technologies, Inc. <info@tempesta-tech.com>  Sun, 26 Mar 2017 18:53:35 +0500
